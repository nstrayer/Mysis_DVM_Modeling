}
allMigrations = cbind(allMigrations, migrations)
counter = counter + 1
}
sum(allMigrations[4,])
sum(allMigrations[1,])
sum(allMigrations[2,])
sum(allMigrations[3,])
sum(allMigrations[4,])
View(allMigrations)
View(allMigrations)
View(allMigrations)
#--------------------------------------------------------------------------------------
#VARIABLES
#
#Gender: this is sex, NOT GENDER
#Age
#Race
#NDRM.CH: % change in muscle mass before & after exercise training (Non-Dominant Arm)
#DRM.CH:  % change in muscle mass before & after exercise training (Dominant Arm)
#Pre.weight
#Pre.height
#pre.BMI
#SBP:     Systolic Blood Pressure
#Dom.Arm: Dominant Arm
#Post.weight
#Post.Height
#Calc.post.BMI
#
#SNPs in lots of different genes
#--------------------------------------------------------------------------------------
# Your assignment is to do an exploratory analysis of genetic and/or other factors
# that are predictive of % change in muscle mass before & after exercise training
# in the non-dominant arm (NDRM.CH).
#--------------------------------------------------------------------------------------
#READ IN THE FULL FAMUSS DATASET
source("http://www.uvm.edu/~rsingle/Rdata/scripts_stat295F14.R")
fms <- otherdata("FMS_data.tsv", sep="\t")
attach(fms)
#TEST CODE (to make sure the data is read in correctly):
summary(resistin_c30t)
# CC   CT NA's
#712   21  664
table(resistin_c30t) #NOTE: NA's not listed
# CC  CT
#712  21
#--------------------------------------------------------------------------------------
View(fms)
View(fms)
Dom.Arm
Post.weight
Post.Height
Age
summary(Age)
summary(Race)
summary(Pre.weight)
summary(Gender)
summary(Pre.weight[Gender == "Male"])
summary(Pre.weight[Gender == "Female"])
View(fms)
View(fms)
summary(NDRM.CH)
plot(NDRM.CH)
box(NDRM.CH)
boxplot(NDRM.CH)
qPlot(NDRM.CH, geom= "jitter")
qplot(NDRM.CH, geom= "jitter")
ggplot(NDRM.CH)
install.packages("ggplot2")
summary(Race)
summary(Pre.weight[Gender == "female"])
summary(Pre.weight[Gender == "Female"])
summary(Pre.weight[Gender == "Male"])
boxplot(DRM.CH)
hist(DRM.CH)
hist(NDRM.CH)
hist(DRM.CH)
hist(NDRM.CH)
quantile(NDRM.CH, c(.9))
quantile(NDRM.CH, .9)
quantile(NDRM.CH, .9, na.rm = TRUE)
quantile(NDRM.CH, .95, na.rm = TRUE)
quantile(NDRM.CH, .9, na.rm = TRUE)
quantile(NDRM.CH, .95, na.rm = TRUE)
quantile(NDRM.CH, .9, na.rm = TRUE)
chisq.test(table(NDRM.CH > 100, actn3_1671064))
summary(chisq.test(table(NDRM.CH > 100, actn3_1671064)))
chisq.test(table(NDRM.CH > 100, actn3_1671064))
dontLoop = c("Gender", "Age", "Race", "NDRM.CH", "DRM.CH", "Pre.weight", "Pre.height",
"pre.BMI", "SBP", "Dom.Arm", "Post.weight", "Post.height", "Calc.post.BMI")
names(fms)
fatso
names(fms)
columns = names(fms)
for (name in columns){
try(chisq.test(DMRM.CH > 100, fms$name))
}
try(chisq.test(NDRM.CH.CH > 100, fms$name))
columns = names(fms)
for (name in columns){
try(chisq.test(NDRM.CH > 100, fms$name))
}
columns = names(fms)
for (name in columns){
tryCatch(chisq.test(NDRM.CH > 100, fms$name))
}
columns = names(fms)
for (name in columns){
result = tryCatch({
chisq.test(NDRM.CH > 100, fms$name)
}, warning = function(warning-condition) {
print("Warning yall")
}, error = function(error-condition) {
print("Error yall")
}, finally={
print("Done yall")
})
}
help("tryCatch")
fms2 = fms[, -"b2b"]
names(fms)
fms2 = fms[, -c("b2b")]
fms2 = fms[, !"b2b"]
colnames(fms) == "b2b"
fms2 = fms[,colnames(fms) != "b2b"]
dim(fms2)
dim(fms)
names(fms)
names(fms)[227]
names(fms)[228]
names(fms)[227]
snps = names(fms)[4:227]
snps
snps = names(fms2)[4:227]
snps
snps = names(fms2)[4:226]
snps
snps = names(fms2)[5:226]
snps
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2$snp))
pvals = c(pvals, pval)
}
dim(NDRM.CH > 100)
NDRM.CH
NDRM.CH > 100
NDRM.CH > 100
dim(NDRM.CH > 100)
length(NDRM.CH > 100)
length(fms2$snps[3])
length(fms2[snps[3]])
snps
fms2$"vim_6602186"
fms2["vim_6602186"]
length(fms2["vim_6602186"])
length(fms2$"vim_6602186")
table(NDRM.CH > 100, fms2$"vim_6602186")
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
pval = chisq.test (table(NDRM.CH > 100, fms2$snp))
pvals = c(pvals, pval)
}
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
print(snp)
#   pval = chisq.test (table(NDRM.CH > 100, fms2$snp))
#   pvals = c(pvals, pval)
}
pvals = NULL
for (snp in snps){
print(typeof(snp)
#   pval = chisq.test (table(NDRM.CH > 100, fms2$snp))
#   pvals = c(pvals, pval)
}
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
print(typeof(snp))
#   pval = chisq.test (table(NDRM.CH > 100, fms2$snp))
#   pvals = c(pvals, pval)
}
typeof("hsdhsosiho")
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
print(typeof(snp))
pval = chisq.test(table(NDRM.CH > 100, fms2$snp))
pvals = c(pvals, pval)
}
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
print(typeof(snp))
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))
pvals = c(pvals, pval)
}
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))
pvals = c(pvals, pval)
}
pvals
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
pvals = c(pvals, pval)
}
pvals
plot(-log10(pvals))
10* 10^(-10)
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
if (-log10(pval) < (10* 10^(-10))){
print(snp)
}
pvals = c(pvals, pval)
}
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
if ((-log10(pval)) < (10* 10^(-10))){
print(snp)
}
pvals = c(pvals, pval)
}
plot(-log10(pvals))
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
if ((-log10(pval)) < (10* 10^(-10))){
print(snp)
}
pvals = c(pvals, pval)
}
plot(-log10(pvals))
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
pvals = c(pvals, pval)
}
plot(-log10(pvals))
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
print(pval)
pvals = c(pvals, pval)
}
plot(-log10(pvals))
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
rs849409
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
fms2 = fms2[,colnames(fms) != "rs849409"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
fms2 = fms[,colnames(fms) != "b2b"]
fms2 = fms2[,colnames(fms) != "rs849409"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
fms2 = fms2[,colnames(fms2) != "rs849409"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
gdf8_1225t
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
#print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
anamolies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
print(-log10(pval))
#print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
1.205409e-15
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
anamolies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
print(-log10(pval))
if (pval < 1.205409e-10){
print(snp)
}
#print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
anamolies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
#print(-log10(pval))
if (pval < 1.205409e-10){
print(snp)
}
#print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
anamolies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
#print(-log10(pval))
#   if (pval < 1.205409e-10){
#     print(snp)
#   }
print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
snps = names(fms2)[5:226]
pvals = NULL
anamolies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
#print(-log10(pval))
if (pval < 1.205409e-10 || pval == NA){
print(snp)
}
print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
anamolies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
#print(-log10(pval))
if (pval < 1.205409e-10 || pval == NaN){
print(snp)
}
print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
anamolies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
#print(-log10(pval))
#   if (pval < 1.205409e-10 || pval == NaN){
#     print(snp)
#   }
print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
anamolies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
#print(-log10(pval))
if (pval < 1.205409e-10 || pval == "NaN"){
print(snp)
}
print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
anamolies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
#print(-log10(pval))
if (pval < 1.205409e-10 || pval == "NaN"){
print(snp)
}
#print(paste(pval, snp))
pvals = c(pvals, pval)
}
plot(-log10(pvals))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
pvals = NULL
anomalies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
#print(-log10(pval))
if (pval < 1.205409e-10 || pval == "NaN"){
anomalies = c(anomalies, snp)
print(snp)
} else {
pvals = c(pvals, pval)
}
}
plot(-log10(pvals))
quantile(NDRM.CH, c(.9))
quantile(NDRM.CH, c(.9))
quantile(NDRM.CH, c(.9), na.rm = TRUE)
cutoff = quantile(NDRM.CH, c(.9), na.rm = TRUE)
cutoff
typeof(cutoff)
cutoff[1]
cutoff[1,2]
cutoff[1,1]
cutoff = quantile(NDRM.CH, c(.9), na.rm = TRUE)
chisq.test(table(NDRM.CH > cutoff, actn3_1671064))
#We assign out cutoff at the 90th percentile
cutoff = quantile(NDRM.CH, c(.9), na.rm = TRUE)
#testing with a random snp first.
chisq.test(table(NDRM.CH > cutoff, actn3_1671064))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
#Initialize some lists
pvals = NULL
anomalies = NULL
for (snp in snps){
pval = chisq.test(table(NDRM.CH > 100, fms2[[snp]]))$p.value
#if there is something wierd about the pval let's exclude it.
if (pval < 1.205409e-10 || pval == "NaN"){
anomalies = c(anomalies, snp)
print(snp)
} else {
#if we didn't exclude it, put it into a nice list for plotting
pvals = c(pvals, pval)
}
}
#To the manhattans!
plot(-log10(pvals))
bar(-log10(pvals))
barplot(-log10(pvals))
